<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://code.alibabatech.com/schema/dubbo 
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:*.properties" />
	<!-- 扫描service包 -->
	<context:component-scan base-package="com.taotao.search.service,com.taotao.search.dao"></context:component-scan>

	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="30" />
		<property name="minIdle" value="5" />
	</bean>
	<!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:SqlMapConfig.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.taotao.search.dao" />
	</bean>

	<!-- 单机版solr-->
	<bean id = "httpSolrServer" class = "org.apache.solr.client.solrj.impl.HttpSolrServer">
	   <constructor-arg name = "baseURL" value= "http://192.168.25.154:8080/solr"></constructor-arg>
	</bean>

   <!--集群版solr
   <bean id = "cloudSolrServer" class = "org.apache.solr.client.solrj.impl.CloudSolrServer">
	   <constructor-arg name = "zkHost" value="192.168.25.154:2181,192.168.25.154:2182,192.168.25.154:2183"></constructor-arg>
       <property name="defaultCollection" value="collection2"></property>
   </bean>-->

	<!-- 配置链接工厂对象-->
	<bean id="targetConnectionFactory" class ="org.apache.activemq.ActiveMQConnectionFactory">
		<property name = "brokerURL"  value="tcp://192.168.25.168:61616"/>
	</bean>
	<!-- 通过spring内置的对象来创建链接对象-->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory" ref="targetConnectionFactory"/>
	</bean>
	<!-- 通过spring自己的对象来得到JmsTemlate模板对象 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"/>
	</bean>
	<!--点对点对象 -->
	<!--<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
		这边的value必须写成发布者的value
		<constructor-arg  value="taotao-queue"/>
	</bean> -->
	<!-- 订阅与发布对象-->
	<bean id="topic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg  value="taotao-topic"/>
	</bean>

	<!-- 配置监听对象-->
	<bean id="itemChangeListener" class="com.taotao.search.listener.ItemChangeListener"></bean>
    <!--把监听器对象交给spring来管理 -->

	<bean  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref = "topic"/>
		<property name="messageListener" ref="itemChangeListener"/>
	</bean>

	<!-- 使用dubbo发布服务 -->
	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="taotao-search" />
	<dubbo:registry protocol="zookeeper"
		address="192.168.25.167:2181" />
	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20882" />
	<!-- 声明需要暴露的服务接口 -->
	<dubbo:service interface="com.taotao.search.service.SearchItemService" ref="searchItemServiceImpl" timeout="30000"></dubbo:service>
	<dubbo:service interface="com.taotao.search.service.SearchService" ref="searchServiceImpl" timeout="30000"></dubbo:service>
	
</beans>
